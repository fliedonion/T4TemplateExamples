<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core"
#><#@ assembly name="System.Data.Linq"
#><#@ assembly name="EnvDTE"
#><#@ assembly name="System.Xml"
#><#@ assembly name="System.Xml.Linq"
#><#@ import namespace="System"
#><#@ import namespace="System.CodeDom"
#><#@ import namespace="System.CodeDom.Compiler"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="System.Data.Linq"
#><#@ import namespace="System.Data.Linq.Mapping"
#><#@ import namespace="System.IO"
#><#@ import namespace="System.Linq"
#><#@ import namespace="System.Reflection"
#><#@ import namespace="System.Text"
#><#@ import namespace="System.Xml.Linq"
#><#@ import namespace="Microsoft.VisualStudio.TextTemplating"
#><#@ assembly name="Microsoft.CSharp.dll" #>
<#@ output extension=".user"#><#  /* .user will ignored by vcs .Xignore file */ #>
<#
	var hostServiceProvider = (IServiceProvider) Host;
	var dte = (EnvDTE.DTE) hostServiceProvider.GetService(typeof(EnvDTE.DTE));
	var projItem = dte.Solution.FindProjectItem(Host.TemplateFile);

	var proj = projItem.ContainingProject;

	var fi = new FileInfo(Host.TemplateFile);
	var outfile = Path.Combine(fi.Directory.FullName, Path.GetFileNameWithoutExtension(Host.TemplateFile));

	HashSet<string> addedFiles = new HashSet<string>();
	for(var i = 0; i < 10; i++){
#>
Hello<#=i#>
<#
		var thisOutFileName = outfile + i +".txt";
		File.WriteAllText(thisOutFileName, this.GenerationEnvironment.ToString()); 
		this.GenerationEnvironment.Length = 0;
		projItem.ProjectItems.AddFromFile(thisOutFileName);
		addedFiles.Add(thisOutFileName);
    }

	// remove ungenerated dependent files.
	// if you want to know what this works, do follow steps:
	// 1. comment out  foreach statements below.
	// 2. change `var thisOutFileName = outfile + i +".txt";` above to `var thisOutFileName = outfile + i + i +".txt";`
	// 3. save this file
	// 4. see solution explorer ( of dependsUpon.tt tree ), old files not removed.
	// 5. restore (step 1 and 2) and save. Then remove useless files.
	foreach(dynamic filetoRemove in projItem.ProjectItems){
		if(!addedFiles.Contains(filetoRemove.FileNames[0])){
			filetoRemove.Delete();
        }
    }
#>
File is generated by T4 Template (<#= Path.GetFileNameWithoutExtension(Host.TemplateFile) #>)

note:
.user file may ignored by .gitignore, .hgignore ...etc. so, this file will be ignored by vcs.
If you want add this file, change \<#@ output extension=".user" \#> directive.